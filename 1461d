#include<iostream>
#include<cmath>
#include<vector>
#include<algorithm>

using namespace std;

int n, m, var, mn = 0, pn = 0, po, ans = 0;
vector<int> v;

int main() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	
	cin >> n >> m;
	for (int i = 0; i < n; i++) {
		cin >> var;
		if (var > 0)
			pn++;
		else
			mn++;
		v.push_back(var);
	}
	sort(v.begin(), v.end());
	
	if (m >= n) {
		if (mn == 0) {
			cout << v[n - 1];
			return 0;
		}
		else if (pn == 0) {
			cout << abs(v[0]);
			return 0;
		}
		if (abs(v[0]) > abs(v[n - 1])) {
			ans += (v[n - 1] * 2) + abs(v[0]);
		}
		else {
			ans += abs(v[0]) * 2 + v[n - 1];
		}
	}
	else if (mn == 0) {
		for (int i = n - 1; i >= 0; i -= m) {
			ans += v[i] * 2;
		}
		ans -= v[n - 1];
	}
	else if (pn == 0) {
		for (int i = 0; i < n; i += m) {
			ans += v[i] * 2;
		}
		ans -= abs(v[0]);
	}
	else {
		for (int i = n - 1; i >= mn; i -= m) {
			ans += v[i] * 2;
		}
		for (int i = 0; i < mn; i += m) {
			ans += abs(v[i]) * 2;
		}
		if (abs(v[0]) > abs(v[n - 1])) {
			ans -= abs(v[0]);
		}
		else {
			ans -= v[n - 1];
		}
	}

	cout << ans;

	return 0;
}
/*
1461 도서관
*/
#include<iostream>
#include<cmath>
#include<vector>
#include<algorithm>

using namespace std;

int n, m, var, mn = 0, pn = 0, po, ans = 0;
vector<int> v;

int main() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	
	cin >> n >> m;
	for (int i = 0; i < n; i++) {
		cin >> var;
		if (var > 0)
			pn++;
		else
			mn++;
		v.push_back(var);
	}
	sort(v.begin(), v.end());
	
	if (m >= n) {
		if (mn == 0) {
			cout << v[n - 1];
			return 0;
		}
		else if (pn == 0) {
			cout << abs(v[0]);
			return 0;
		}
		if (abs(v.front()) > abs(v.back())) {
			ans += (v.back() * 2) + abs(v.front());
		}
		else {
			ans += abs(v.front()) * 2 + v.back();
		}
	}
	else if (mn == 0) {
		for (int i = n - 1; i >= 0; i -= m) {
			ans += v[i] * 2;
		}
		ans -= v.back();
	}
	else if (pn == 0) {
		for (int i = 0; i < n; i += m) {
			ans += v[i] * 2;
		}
		ans -= abs(v.front());
	}
	else {
		for (int i = n - 1; i >= mn; i -= m) {
			ans += v[i] * 2;
		}
		for (int i = 0; i < mn; i += m) {
			ans += abs(v[i]) * 2;
		}
		if (abs(v[0]) > abs(v.back())) {
			ans -= abs(v.front());
		}
		else {
			ans -= v.back();
		}
	}

	cout << ans;

	return 0;
}
/*
1461 도서관
*/
#include<iostream>
#include<cmath>
#include<vector>
#include<algorithm>

using namespace std;

int n, m, var, mn = 0, pn = 0, po, ans = 0;
vector<int> v;

int main() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	
	cin >> n >> m;
	for (int i = 0; i < n; i++) {
		cin >> var;
		if (var > 0) // 입력하면서 양수와 음수의 개수를 확보한다.
			pn++;
		else
			mn++;
		v.push_back(var);
	}
	sort(v.begin(), v.end()); // 정렬
	
	if (m >= n) { // m이 n보다 크거나 같은경우
		if (mn == 0) { // 양수만 있으면 제일 큰 수 출력한다.
			cout << v[n - 1];
			return 0;
		}
		else if (pn == 0) {
			cout << abs(v[0]);
			return 0;
		}
		if (abs(v[0]) > abs(v[n - 1])) { // 절대값을 비교해 음수가 큰 경우
			ans += (v[n - 1] * 2) + abs(v[0]); // 제일 큰 양수 * 2 + 음수의 절대값이 제일 큰 수
		}
		else {
			ans += abs(v[0]) * 2 + v[n - 1];
		}
	}
	else if (mn == 0) { // 음수가 없다면 
		for (int i = n - 1; i >= 0; i -= m) { // 양수중 제일 큰 수부터 m씩 내려오며 2를 곱해 더해준다.
			ans += v[i] * 2;
		}
		ans -= v[n - 1]; // 제일 큰 수를 한번 빼준다.
	}
	else if (pn == 0) {
		for (int i = 0; i < n; i += m) {
			ans += v[i] * 2;
		}
		ans -= abs(v[0]);
	}
	else { // mn은 음수의 개수로 음수와 양수의 경계를 알 수 있다.
		for (int i = n - 1; i >= mn; i -= m) {
			ans += v[i] * 2;
		}
		for (int i = 0; i < mn; i += m) {
			ans += abs(v[i]) * 2;
		}
		if (abs(v[0]) > abs(v[n - 1])) {
			ans -= abs(v[0]);
		}
		else {
			ans -= v[n - 1];
		}
	}

	cout << ans;

	return 0;
}
#include<iostream>
#include<cmath>
#include<vector>
#include<algorithm>

using namespace std;

int n, m, var, mn = 0, pn = 0, po, ans = 0;
vector<int> v;

int main() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	cin >> n >> m;
	for (int i = 0; i < n; i++) {
		cin >> var;
		if (var > 0)
			pn++;
		else
			mn++;
		v.push_back(var);
	}
	sort(v.begin(), v.end());

	if (m >= n) {
		if (mn == 0) {
			cout << v[n - 1];
			return 0;
		}
		else if (pn == 0) {
			cout << abs(v[0]);
			return 0;
		}
		if (abs(v.front()) > abs(v.back())) {
			ans += (v.back() * 2) + abs(v.front());
		}
		else {
			ans += abs(v.front()) * 2 + v.back();
		}
	}
	else if (mn == 0) {
		for (int i = n - 1; i >= 0; i -= m) {
			ans += v[i] * 2;
		}
		ans -= v.back();
	}
	else if (pn == 0) {
		for (int i = 0; i < n; i += m) {
			ans += abs(v[i]) * 2;
		}
		ans -= abs(v.front());
	}
	else {
		for (int i = n - 1; i >= mn; i -= m) {
			ans += v[i] * 2;
		}
		for (int i = 0; i < mn; i += m) {
			ans += abs(v[i]) * 2;
		}
		if (abs(v[0]) > abs(v.back())) {
			ans -= abs(v.front());
		}
		else {
			ans -= v.back();
		}
	}

	cout << ans;

	return 0;
}
/*
1461 도서관
abs 사용 과정에서 오류가 있었다.
*/
