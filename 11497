#include<iostream>
#include<queue>

using namespace std;

int main() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int t, n, var1, var2, max, ans[10001];
	priority_queue<int> pq;
	bool group = true;

	cin >> t;

	for (int i = 0; i < t; i++) {
		cin >> n;
		max = 0;
		while (!pq.empty())
			pq.pop();
		for (int j = 0; j < n; j++) {
			cin >> var1;
			pq.push(var1);
		}
		var1 = var2 = pq.top();
		pq.pop();
		while (pq.size() > 1) {
			if (group) {
				var1 -= pq.top();
				max = (var1 > max) ? var1 : max;
				var1 = pq.top();
				pq.pop();
				group = false;
			}
			else {
				var2 -= pq.top();
				max = (var2 > max) ? var2 : max;
				var2 = pq.top();
				pq.pop();
				group = true;
			}
		}
		var1 -= pq.top();
		max = (var1 > max) ? var1 : max;
		var2 -= pq.top();
		max = (var2 > max) ? var2 : max;

		ans[i] = max;
	}

	for (int i = 0; i < t; i++)
		cout << ans[i] << endl;

	return 0;
}
/*
11497 통나무
1. 제일 큰 수와 작은 수를 제외하고 번갈아 가며 두 그룹으로 나눠야한다.
2. 두 그룹으로 나누면서 수들의 차를 계산하여 max보다 크다면 넣어준다.
*/
