#include<iostream>

using namespace std;

int main() {

	int n, f;
	int count = 1;
	int arr[2][100000];
	int box[2];
	cin >> n;
	
	for (int i = 0; i < n; i++) {
		cin >> arr[0][i] >> arr[1][i];
	}
	for (int i = n-1; i > 0; i--) {
		for (int j = 0; j < i; j++) {
			if (arr[1][j] > arr[1][j + 1]) {
				box[0] = arr[0][j];
				box[1] = arr[1][j];
				arr[0][j] = arr[0][j + 1];
				arr[1][j] = arr[1][j + 1];
				arr[0][j + 1] = box[0];
				arr[1][j + 1] = box[1];
			}
		}
	}
	f = arr[1][0];
	for (int i = 1; i < n; i++) {
		if (arr[0][i] >= f) {
			f = arr[1][i];
			count++;
		}
	}
	cout << count << endl;
	return 0;
}
/*
case1
1. 끝나는 시간이 제일 작은 회의를 찾는다.
2. 시작 시간이 전의 회의의 끝나는 시간과 같거나 큰 회의를 찾고 끝나는 시간을 비교한다.
3. 충족되는 회의 시간이 없을때까지 반복
>>시간초과
case2
예제처럼 주어지는 시간들이 끝나는 시간 작은 순서로 나열된다는 가정
첫줄 끝나는 시간 피봇으로 받고 시작하는 시간이 같거나 크면 무조건 시간 변경하고 count++
첫줄의 가정은 가정일뿐이었고 끝나는 시간을 기준으로 정렬하기로 함
>>시간초과
*/
