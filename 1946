#include<iostream>
#include<vector>
#include<algorithm>

using namespace std;

int main() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int t, n, ft, st, cnt, stand;
	int vol[20];
	vector<pair<int, int>> v;

	cin >> t;
	for (int i = 0; i < t; i++) {
		cin >> vol[i];
		cnt = 1;
		for (int j = 0; j < vol[i]; j++) {
			cin >> ft >> st;
			v.push_back(make_pair(ft, st));
		}
		sort(v.begin(), v.end());
		stand = v[0].second;
		for (int j = 1; j < vol[i]; j++) {
			if (v[j].second == 1) {
				cnt++;
				break;
			}
			if (v[j].second < stand) {
				cnt++;
				stand = v[j].second;
			}
		}
		vol[i] = cnt;
		v.clear();
	}
	for (int i = 0; i < t; i++)
		cout << vol[i] << endl;

	return 0;
}
/*
1946 신입 사원
1. 벡터로 페어 만듦
2. 첫번째 시험을 이용하여 정렬
3. 정렬된 기준으로 2등부터는 두번째 시험이 1등보다 높고 그 아래의 지원자들은 2등보다도 높아야 한다.
4. num[i]에 그대로 기록하고 벡터 초기화
5. 반복

처음에 맨 윗사람보다 낮으면 다 합격 -> 맨 윗사람과 1 사이안이면 합격 -> 맨 윗사람보다 낮고 낮은 사람을 찾는 순간 기준이 바뀌어야 한다.
반례 찾는다고 힘들었음
2
1 2
2 1

3
1 3
2 2
3 1

3
1 2
2 1
3 3

3
1 1
2 2
3 3

3
1 3
2 1
3 2

4
1 4
2 3
3 1
4 2

1 4
2 3
3 2
4 1

1
6
6 4     1 6
4 1     2 3
5 2     3 5
1 6     4 1
2 3     5 2
3 5     6 4
4(x) -> 3(o)
*/
