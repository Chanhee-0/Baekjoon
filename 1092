#include<iostream>
#include<vector>
#include<set>
#include<algorithm>

using namespace std;

int n, m, var, ans = 0;
vector<int> v;
multiset<int> ms;

int main() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> var;
		v.push_back(var);
	}
	sort(v.rbegin(), v.rend());

	cin >> m;
	for (int i = 0; i < m; i++) {
		cin >> var;
		ms.insert(var);
	}

	if (*ms.rbegin() > v[0]) {
		cout << "-1";
		return 0;
	}

	while (!ms.empty()) {
		for (int i = 0; i < n; i++) {
			if (ms.empty())
				break;
			auto iter = ms.end();
			--iter;
			while (iter != --ms.begin()) {
				if (v[i] >= *iter) {
					ms.erase(iter);
					break;
				}
				else
					iter--;
			}
		}
		ans++;
	}

	cout << ans;

	return 0;
}
/*
1092 배
1. 크레인 무게들이랑 수하물 무게들 정렬
2. 크레인의 최대 무게를 한바퀴 돌때까지
시간 초과
*/
#include<iostream>
#include<vector>
#include<list>
#include<algorithm>

using namespace std;

int n, m, var, ans = 0;
vector<int> v;
list<int> wei;

int main() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> var;
		v.push_back(var);
	}
	sort(v.rbegin(), v.rend());

	cin >> m;
	for (int i = 0; i < m; i++) {
		cin >> var;
		wei.push_back(var);
	}
	wei.sort();
	wei.reverse();

	if (wei.front() > v[0]) {
		cout << "-1";
		return 0;
	}

	while (!wei.empty()) {
		for (int i = 0; i < n; i++) {
			if (wei.empty())
				break;
			if (wei.back() > v[i])
				break;
			auto iter = wei.begin();
			while (iter != wei.end()) {
				if (v[i] >= *iter) {
					wei.erase(iter);
					break;
				}
				else
					iter++;
			}
		}
		ans++;
	}

	cout << ans;

	return 0;
}
/*
1092 배
1. 크레인 무게들이랑 수하물 무게들 정렬
2. 크레인의 최대 무게가 내림차순으로 정렬된 수하물 무게보다 작아지면 break하고 바로 ans++
삽입 삭제 빠른 list로 바꿔주고 조건식 다듬어 줬더니 통과
*/
